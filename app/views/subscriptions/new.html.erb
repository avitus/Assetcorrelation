<div>

    <h1>Purchase a Subscription to AssetCorrelation</h1>

    <%= form_for @subscription do |f| %>
        
        <% if @subscription.errors.any? %>

        <div class="error_messages">
            <h2><%= pluralize(@subscription.errors.count, "error") %> prohibited this subscription from being saved:</h2>
            <ul>
                <% @subscription.errors.full_messages.each do |msg| %>
                    <li><%= msg %></li>
                <% end %>
            </ul>
        </div>
        <% end %>

        <%= f.hidden_field :plan_id %>
        <%= f.hidden_field :user_id, :value => current_user.id %>
        <%= f.hidden_field :stripe_card_token %>



        <div class="field">
            <%= label_tag :card_number, "Credit Card Number " %>
            <%= text_field_tag :card_number, nil, name: nil %>
        </div>

        <div class="field">
            <%= label_tag :card_code, "Security Code on Card (CVV)" %>
            <%= text_field_tag :card_code, nil, name: nil %>
        </div>

        <div class="field">
            <%= label_tag :card_month, "Card Expiration" %>
            <%= select_month nil, {add_month_numbers_true: true}, {name: nil, id: "card-expiry-month"}%>
            <%= select_year nil, {start_year: Date.today.year, end_year: Date.today.year+15}, {name: nil, id: "card-expiry-year"}%>
        </div>

        <div class="actions"><%= f.submit "Subscribe" %></div>

        <div id="stripe_error">
            <noscript>JavaScript is not enabled and is required for this form. First enable it in your web browser settings.</noscript>
        </div>        
    
    <% end %>

</div>

<!--
The easiest way to indicate that the form requires JavaScript is to show
the form with JavaScript (otherwise it will not render). You can add a
helpful message in a noscript to indicate that users should enable JS.
-->
<script>if (window.Stripe) $("#new_subscription").show()</script>
<noscript><p>JavaScript is required for the registration form.</p></noscript>

<!-- Required for custom form validations; for some reason does not work when included in layout file -->
<script type="text/javascript" src="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.9/jquery.validate.min.js"></script>

<script type="text/javascript">

    $(document).ready(function() {

        Stripe.setPublishableKey($('meta[name="stripe-key"]').attr('content'));

        function addInputNames() {
            // Not ideal, but jQuery's validate plugin requires fields to have names
            // so we add them at the last possible minute, in case any javascript
            // exceptions have caused other parts of the script to fail.
            $(".card-number"     ).attr("name", "card-number")
            $(".card-cvc"        ).attr("name", "card-cvc")
            $("#card-expiry-year").attr("name", "card-expiry-year")
        }

        function removeInputNames() {
            $(".card-number"     ).removeAttr("name")
            $(".card-cvc"        ).removeAttr("name")
            $("#card-expiry-year").removeAttr("name")
        }

        function submit(form) {
            // remove the input field names for security
            // we do this *before* anything else which might throw an exception
            removeInputNames(); // THIS IS IMPORTANT!

            // given a valid form, submit the payment details to stripe
            $(form['submit-button']).attr("disabled", "disabled")

            Stripe.createToken({
                number:     $('#card_number').val(),
                cvc:        $('#card_code').val(),
                exp_month:  $('#card-expiry-month').val(),
                exp_year:   $('#card-expiry-year').val()
            }, function(status, response) {
                if (response.error) {

                    $('#stripe_error').text(response.error.message)
                    $('input[type=submit]').attr('disabled', false)                    

                    // re-enable the submit button
                    $(form['submit-button']).removeAttr("disabled")

                    // show the error
                    $(".payment-errors").html(response.error.message);

                    // we add these names back in so we can revalidate properly
                    addInputNames();
                } else {
                    // token contains id, last4, and card type
                    var token = response['id'];

                    // insert the stripe token
                    $('#subscription_stripe_card_token').val(token);

                    // and submit
                    form.submit();
                }
            });
            
            return false;
        }
        
        // add custom rules for credit card validating
        jQuery.validator.addMethod("cardNumber", Stripe.validateCardNumber, "Please enter a valid card number");
        jQuery.validator.addMethod("cardCVC", Stripe.validateCVC, "Please enter a valid security code");
        jQuery.validator.addMethod("cardExpiry", function() {
            return Stripe.validateExpiry($("#card-expiry-month").val(),
                                         $("#card-expiry-year").val())
        }, "Please enter a valid expiration");

        // We use the jQuery validate plugin to validate required params on submit
        $("#new_subscription").validate({
            submitHandler: submit,
            rules: {
                "card-cvc" : {
                    cardCVC:  true,
                    required: true
                },
                "card-number" : {
                    cardNumber: true,
                    required:   true
                },
                "card-expiry-year" : "cardExpiry" // we don't validate month separately
            }
        });

        // adding the input field names is the last step, in case an earlier step errors
        addInputNames();
    });
</script>